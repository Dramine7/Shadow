module.exports = {
    name: "CHANGENAME",
    description: "CHANGETOO",
    execute(message, args, Discord, channel, iduser, weather, bot, prefix){

    },
};







//for spam
const usersMap = new Map();
const LIMIT = 5;
const TIME = 10000;
const DIFF = 2000;





 //spam
    /*
    if(message.author.bot)return;
 
    if(usersMap.has(message.author.id)){
        const userData = usersMap.get(message.author.id);
        const { lastMessage, timer } = userData;
        const difference = message.createdTimestamp - lastMessage.createdTimestamp;
        let msgCount = userData.msgCount;
        console.log(difference);
        if(difference > DIFF){
            clearTimeout(timer);
            console.log('Cleared timeout');
            userData.msgCount = 1;
            userData.lastMessage = message;
            userData.timer = setTimeout(() => {
                usersMap.delete(message.author.id);
                console.log('Removed from RESET.');
            }, TIME);
            usersMap.set(message.author.id, userData);
        }
        else{
            ++msgCount;
            //do on spam
            if(parseInt(msgCount) === LIMIT) {/*
                const role = message.guild.roles.cache.get('420620629557903391');
                message.member.roles.add(role);
                message.channel.send('You have been muted.');
                setTimeout(() => {
                    message.member.roles.remove(role);
                    message.channel.send('You have been unmuted');
                }, TIME);*/
                /*
                message.reply("Stop");
                setTimeout(function(){
                    return;
                }, 10000);
                }else{
                    userData.msgCount = msgCount;
                    usersMap.set(message.author.id, userData);
                }
            }
        }else{
                 let fn = setTimeout(() => {
                     usersMap.delete(message.author.id);
                     console.log('Removed from map.');
                 }, TIME);
                 usersMap.set(message.author.id, {
                     msgCount: 1,
                     lastMessage: message,
                     timer: fn
                 });
        }
     */
